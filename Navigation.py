# -*- coding: ISO-8859-1 -*-
#
# generated by wxGlade 0.9.3 on Thu Jun 27 21:45:40 2019
#

import wx

from LaserCommandConstants import *
from icons import *

_ = wx.GetTranslation


# begin wxGlade: dependencies
# end wxGlade


class Navigation(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Navigate.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE | wx.FRAME_TOOL_WINDOW | wx.STAY_ON_TOP
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((237, 401))
        self.button_top = wx.BitmapButton(self, wx.ID_ANY, icons8up.GetBitmap())
        self.button_left = wx.BitmapButton(self, wx.ID_ANY, icons8_left.GetBitmap())
        self.button_home = wx.BitmapButton(self, wx.ID_ANY, icons8_home_filled_50.GetBitmap())
        self.button_right = wx.BitmapButton(self, wx.ID_ANY, icons8_right.GetBitmap())
        self.button_bottom = wx.BitmapButton(self, wx.ID_ANY, icons8_down.GetBitmap())
        self.button_unlock = wx.BitmapButton(self, wx.ID_ANY, icons8_padlock_50.GetBitmap())
        self.button_lock = wx.BitmapButton(self, wx.ID_ANY, icons8_lock_50.GetBitmap())
        self.button_pulse = wx.BitmapButton(self, wx.ID_ANY, icons8_gas_industry_50.GetBitmap())
        self.spin_step_size = wx.SpinCtrlDouble(self, wx.ID_ANY, "10.0", min=0.0, max=1000.0)
        self.spin_pulse_time = wx.SpinCtrlDouble(self, wx.ID_ANY, "50.0", min=0.0, max=1000.0)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.move_top, self.button_top)
        self.Bind(wx.EVT_BUTTON, self.move_left, self.button_left)
        self.Bind(wx.EVT_BUTTON, self.home, self.button_home)
        self.Bind(wx.EVT_BUTTON, self.move_right, self.button_right)
        self.Bind(wx.EVT_BUTTON, self.move_bottom, self.button_bottom)
        self.Bind(wx.EVT_BUTTON, self.unlock_rail, self.button_unlock)
        self.Bind(wx.EVT_BUTTON, self.lock_rail, self.button_lock)
        self.Bind(wx.EVT_BUTTON, self.fire_time, self.button_pulse)
        self.Bind(wx.EVT_SPINCTRLDOUBLE, self.on_spin_step_size, self.spin_step_size)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_spin_step_size, self.spin_step_size)
        self.Bind(wx.EVT_SPINCTRLDOUBLE, self.on_spin_pulse_time, self.spin_pulse_time)
        self.Bind(wx.EVT_TEXT_ENTER, self.on_spin_pulse_time, self.spin_pulse_time)
        # end wxGlade
        self.kernel = None
        self.Bind(wx.EVT_CLOSE, self.on_close, self)
        self.device = None

    def on_close(self, event):
        self.kernel.mark_window_closed("Navigation")
        event.Skip()  # Call destroy.

    def __set_properties(self):
        # begin wxGlade: Navigate.__set_properties
        self.SetTitle("Navigate")
        self.SetTitle("Navigation")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(icons8_move_32.GetBitmap())
        self.SetIcon(_icon)
        self.button_top.SetSize(self.button_top.GetBestSize())
        self.button_left.SetSize(self.button_left.GetBestSize())
        self.button_home.SetSize(self.button_home.GetBestSize())
        self.button_right.SetSize(self.button_right.GetBestSize())
        self.button_bottom.SetSize(self.button_bottom.GetBestSize())
        self.button_unlock.SetSize(self.button_unlock.GetBestSize())
        self.button_lock.SetSize(self.button_lock.GetBestSize())
        self.button_pulse.SetSize(self.button_pulse.GetBestSize())
        self.spin_step_size.SetIncrement(1.0)
        self.spin_pulse_time.SetIncrement(10.0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Navigate.__do_layout
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(5, 3, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_top, 0, wx.EXPAND, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_left, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_home, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_right, 0, wx.EXPAND, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_bottom, 0, wx.EXPAND, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(self.button_unlock, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_lock, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_pulse, 0, wx.EXPAND, 0)
        sizer_7.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        label_4 = wx.StaticText(self, wx.ID_ANY, "Step size")
        label_4.SetMinSize((85, 16))
        sizer_9.Add(label_4, 0, 0, 0)
        sizer_9.Add(self.spin_step_size, 0, 0, 0)
        label_6 = wx.StaticText(self, wx.ID_ANY, "mm")
        sizer_9.Add(label_6, 0, 0, 0)
        sizer_8.Add(sizer_9, 1, wx.EXPAND, 0)
        label_5 = wx.StaticText(self, wx.ID_ANY, "Pulse time")
        label_5.SetMinSize((85, 16))
        sizer_10.Add(label_5, 0, 0, 0)
        sizer_10.Add(self.spin_pulse_time, 0, 0, 0)
        label_7 = wx.StaticText(self, wx.ID_ANY, "ms")
        sizer_10.Add(label_7, 0, 0, 0)
        sizer_8.Add(sizer_10, 1, wx.EXPAND, 0)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_7)
        self.Layout()
        # end wxGlade

    def set_kernel(self, kernel):
        self.kernel = kernel
        self.device = kernel.device
        if self.device is None:
            for attr in dir(self):
                value = getattr(self, attr)
                if isinstance(value, wx.Control):
                    value.Enable(False)
            dlg = wx.MessageDialog(None, _("You do not have a selected device."),
                                   _("No Device Selected."), wx.OK | wx.ICON_WARNING)
            result = dlg.ShowModal()
            dlg.Destroy()
        else:
            self.kernel.setting(float, "navigation_step", self.spin_step_size.GetValue())
            self.kernel.setting(float, "navigation_pulse", self.spin_pulse_time.GetValue())
            self.spin_step_size.SetValue(kernel.navigation_step)
            self.spin_pulse_time.SetValue(kernel.navigation_pulse)

    def home(self, evt):
        self.device.interpreter.home()

    def lock_rail(self, evt):
        self.device.interpreter.lock_rail()

    def unlock_rail(self, evt):
        self.device.interpreter.unlock_rail()

    def fire_time(self, evt):
        value = self.spin_pulse_time.GetValue()
        value = value / 1000.0

        def timed_fire():
            yield COMMAND_WAIT_BUFFER_EMPTY
            yield COMMAND_LASER_ON
            yield COMMAND_WAIT, value
            yield COMMAND_LASER_OFF
        self.device.send_job(timed_fire)

    def move_top(self, evt):
        value = self.spin_step_size.GetValue()
        value = int(value * 39.37)
        self.device.interpreter.move_relative(0, -value)

    def move_left(self, evt):
        value = self.spin_step_size.GetValue()
        value = int(value * 39.37)
        self.device.interpreter.move_relative(-value, 0)

    def move_right(self, evt):
        value = self.spin_step_size.GetValue()
        value = int(value * 39.37)
        self.device.interpreter.move_relative(value, 0)

    def move_bottom(self, evt):
        value = self.spin_step_size.GetValue()
        value = int(value * 39.37)
        self.device.interpreter.move_relative(0, value)

    def on_spin_step_size(self, event):  # wxGlade: Navigate.<event_handler>
        self.kernel.navigation_step = self.spin_step_size.GetValue()

    def on_spin_pulse_time(self, event):  # wxGlade: Navigate.<event_handler>
        self.kernel.navigation_pulse = self.spin_pulse_time.GetValue()
